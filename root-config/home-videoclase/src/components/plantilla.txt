export default function PlantillaN() {
  const [tasks, setTasks] = useState([
    {
      id: 1,
      title: 'Título 1',
      body: 'Lorem, ipsum dolor sit amet consectetur adipisicing elit ipsum dolor.',
      list: 1
    },
    {
      id: 2,
      title: 'Título 2',
      body: 'Lorem, ipsum dolor sit amet consectetur adipisicing elit ipsum dolor.',
      list: 1
    },
    {
      id: 3,
      title: 'Título 3',
      body: 'Lorem, ipsum dolor sit amet consectetur adipisicing elit ipsum dolor.',
      list: 3
    },
    {
      id: 4,
      title: 'Título 4',
      body: 'Lorem, ipsum dolor sit amet consectetur adipisicing elit ipsum dolor.',
      list: 2
    },
    {
      id: 5,
      title: 'Título 5',
      body: 'Lorem, ipsum dolor sit amet consectetur adipisicing elit ipsum dolor.',
      list: 2
    },
  ]);

  const getList = (list) => {
    return tasks.filter(item => item.list === list)
  }

  const startDrag = (evt, item) => {
    evt.dataTransfer.setData('itemID', item.id)
  }

  const draggingOver = (evt) => {
    evt.preventDefault();
  }

  const onDrop = (evt, list) => {
    const itemID = evt.dataTransfer.getData('itemID');
    const item = tasks.find(item => item.id == itemID);

    // Duplicamos la tarea en lugar de moverla
    const duplicatedTask = { ...item, id: new Date().getTime(), list };

    setTasks(prevState => [...prevState, duplicatedTask]); // Añadimos la tarea duplicada al estado
  }

  const handleTitleChange = (id, newTitle) => {
    setTasks(prevState =>
      prevState.map(task =>
        task.id === id ? { ...task, title: newTitle } : task
      )
    );
  }

  return (
    <>
      <h1>
        Arrastrar y Soltar &nbsp;
        <img className='icon-react' src="src/assets/react.svg" alt="" />
      </h1>
      <br />

      <div className='drag-and-drop'>
        <div className='column column--1'>
          <h3>
            Estilos Predeterminados
          </h3>
          <div className='dd-zone' droppable="true" onDragOver={(evt) => draggingOver(evt)} onDrop={(evt) => onDrop(evt, 1)}>
            {getList(1).map(item => (
              <div className='dd-element' key={item.id} draggable onDragStart={(evt) => startDrag(evt, item)}>
                <strong className='title'>
                  <input
                    type="text"
                    value={item.title}
                    onChange={(e) => handleTitleChange(item.id, e.target.value)}
                  />
                </strong>
                <p className='body'>{item.body}</p>
              </div>
            ))}
          </div>
        </div>

        <div className='column2 column--2'>
          <h3>Presentación Actual</h3>

          <div className='columns-container'>
            {/* Columna 1 */}
            <div className='column'>
              <h4>Columna 1</h4>
              <div
                className='dd-zone'
                droppable="true"
                onDragOver={(evt) => draggingOver(evt)}
                onDrop={(evt) => onDrop(evt, 2)}
              >
                {getList(2).map(item => (
                  <div className='dd-element' key={item.id} draggable onDragStart={(evt) => startDrag(evt, item)}>
                    <strong className='title'>
                      <input
                        type="text"
                        value={item.title}
                        onChange={(e) => handleTitleChange(item.id, e.target.value)}
                      />
                    </strong>
                    <p className='body'>{item.body}</p>
                  </div>
                ))}
              </div>
            </div>

            {/* Columna 2 */}
            <div className='column'>
              <h4>Columna 2</h4>
              <div
                className='dd-zone'
                droppable="true"
                onDragOver={(evt) => draggingOver(evt)}
                onDrop={(evt) => onDrop(evt, 3)}
              >
                {getList(3).map(item => (
                  <div className='dd-element' key={item.id} draggable onDragStart={(evt) => startDrag(evt, item)}>
                    <strong className='title'>
                      <input
                        type="text"
                        value={item.title}
                        onChange={(e) => handleTitleChange(item.id, e.target.value)}
                      />
                    </strong>
                    <p className='body'>{item.body}</p>
                  </div>
                ))}
              </div>
            </div>
          </div>
        </div>


      </div>
    </>
  );
}